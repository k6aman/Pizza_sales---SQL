-- Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT PIZZA_TYPES.CATEGORY, SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY
FROM PIZZA_TYPES
LEFT JOIN PIZZAS
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
LEFT JOIN ORDER_DETAILS
ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
GROUP BY PIZZA_TYPES.CATEGORY
ORDER BY QUANTITY DESC;

-- Determine the distribution of orders by hour of the day.
SELECT * FROM ORDERS;
SELECT HOUR(ORDER_TIME) AS PER_HOUR, COUNT(ORDER_ID) AS ORDER_COUNT
FROM ORDERS 
GROUP BY PER_HOUR;

-- Join relevant tables to find the category-wise distribution of pizzas.
SELECT COUNT(PIZZA_TYPES.NAME), PIZZA_TYPES.CATEGORY
FROM PIZZA_TYPES
GROUP BY PIZZA_TYPES.CATEGORY;

-- Group the orders by date and calculate the average number of pizzas ordered per day. 
SELECT ROUND(AVG(QUANTITY),0) AS AVERAGE_PIZZAS_ORDERED_PER_DAY FROM
(SELECT ORDERS.ORDER_DATE, SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY
FROM ORDERS
LEFT JOIN ORDER_DETAILS
ON ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID
GROUP BY ORDERS.ORDER_DATE) AS ORDER_QUANTITY; 

-- Determine the top 3 most ordered pizza types based on revenue.
SELECT PIZZA_TYPES.NAME, SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE
FROM PIZZA_TYPES
LEFT JOIN PIZZAS
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
LEFT JOIN ORDER_DETAILS
ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
GROUP BY PIZZA_TYPES.NAME
ORDER BY REVENUE DESC
LIMIT 3;